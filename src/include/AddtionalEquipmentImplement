#include <AddtionalEquipment>

namespace _IO_SYMBOL
{
    AddtionalEquipment::AddtionalEquipment(__UINT16_TYPE__ length = 0, __UINT16_TYPE__ length_other = 0)
    {
    }
    AddtionalEquipment::~AddtionalEquipment()
    {
        delete this->returnSet;
    }
    __int32 AddtionalEquipment::getMAX()
    {
        return this->MAX;
    }
    _TARGET_INPUT
    __UINT16_TYPE__ *AddtionalEquipment::getLength(char *target)
    {
        if (target[0] == '\0')
        {
            return 0;
        }
        for (int i = 0; target[i] != '\0'; i++, this->length = i)
        {
            if (target[i] > 127 || target[i] < 0)
            {
                this->length_other++;
                i++;
            }
        }
        this->length_alphabet = this->length - this->length_other * 2;
        this->returnSet = new unsigned short[2];
        this->returnSet[0] = this->length_alphabet;
        this->returnSet[1] = this->length_other;
        return this->returnSet;
    }
}